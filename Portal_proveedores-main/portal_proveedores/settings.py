"""
Django settings for portal_proveedores project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
import re
from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv
from decouple import config
import sentry_sdk
load_dotenv(".env")
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG')

ALLOWED_HOSTS = ['portalproveedores.fepco.com.co', '127.0.0.1']
CSRF_TRUSTED_ORIGINS = ['https://portalproveedores.fepco.com.co', 'http://127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django_celery_beat',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'proveedores',
    'compras',
    'fontawesomefree',
    'rest_framework',  
    'rest_framework.authtoken', 
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    )
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'portal_proveedores.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'portal_proveedores.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config('MYSQL_DATABASE'),
            'USER': config('MYSQL_USER', 'root'),
            'PASSWORD':  config('MYSQL_PASSWORD'),
            'HOST':  config('DB_HOST'),
            'PORT': config('DB_PORT'),
        }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es'

LANGUAGES = [
    ("es", _("Spanish")),
    ("en", _("English")),
]

TIME_ZONE = 'America/Bogota' 

USE_I18N = True

USE_TZ = True


SITE_DOMAIN = config('SITE_DOMAIN')
SITE_PORT=config('SITE_PORT')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
MEDIA_ROOT = BASE_DIR / 'media'
STATIC_URL = '/static/'
MEDIA_URL = 'media/'

STATIC_ROOT = BASE_DIR / 'files_site'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CELERY_BROKER_URL = 'redis://redis:6379/0'  # URL del broker (en este caso, Redis)
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'  # Backend para almacenar los resultados de las tareas
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'America/Bogota' 
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 86400 
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# settings.py

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'fepco-com-co.mail.protection.outlook.com' 
EMAIL_PORT = 25
EMAIL_USE_TLS=False
EMAIL_USE_SSL=False
EMAIL_HOST_USER= None
EMAIL_HOST_PASSWORD= None
DEFAULT_FROM_EMAIL= 'plataformas@fepco.com.co'
DEFAULT_FROM_EMAIL = 'plataformas@fepco.com.co'
EMAIL_SUBJECT_PREFIX = '[Portal_Proveedores] '

#ADMINS = [('Jennyfer Sanchez', 'jcsanchez@fepco.com.co'), ]
ADMINS = [('Yessica Morales', 'ymorales@fepco.com.co'), ]  # Lista de receptores de los errores  # Lista de receptores de los errores
MANAGERS = ADMINS
#SERVER_EMAIL = 'plataformas@fepco.com.co'
SERVER_EMAIL = 'ymorales@fepco.com.co'


# En tu archivo settings.py
PASSWORD_RESET_CONFIRM_URL = 'password_reset/reset/{uidb64}/{token}/'
IGNORABLE_404_URLS = (
    re.compile(r'\.(php|cgi)$'),
    re.compile(r'^/phpmyadmin/'),
)

sentry_sdk.init(
    dsn="https://aa25d063bfcd79c83d0d174ce2ad68d4@o4507464920924160.ingest.us.sentry.io/4507493531713536",
    traces_sample_rate=1.0,
    profiles_sample_rate=1.0,
    environment="development",
)